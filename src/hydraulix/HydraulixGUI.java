/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package hydraulix;

/**
 *
 * @author PG
 */
public class HydraulixGUI extends javax.swing.JFrame {

  /**
   * Creates new form HydraulixGUI
   */
  public HydraulixGUI() {
    initComponents();
    initChannelFields();
  }

  /**
   * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    buttonGroup1 = new javax.swing.ButtonGroup();
    buttonGroup2 = new javax.swing.ButtonGroup();
    jTabbedPane1 = new javax.swing.JTabbedPane();
    jPanel1 = new javax.swing.JPanel();
    jPanel7 = new javax.swing.JPanel();
    channelCalcButton = new javax.swing.JButton();
    channelResetButton = new javax.swing.JButton();
    channelRectButton = new javax.swing.JRadioButton();
    channelCircButton = new javax.swing.JRadioButton();
    channelTrapButton = new javax.swing.JRadioButton();
    jSeparator1 = new javax.swing.JSeparator();
    jLabel4 = new javax.swing.JLabel();
    channelSlope = new javax.swing.JTextField();
    jLabel5 = new javax.swing.JLabel();
    channelRoughness = new javax.swing.JTextField();
    jLabel6 = new javax.swing.JLabel();
    channelBottomWidth = new javax.swing.JTextField();
    jLabel7 = new javax.swing.JLabel();
    channelDiameter = new javax.swing.JTextField();
    jLabel8 = new javax.swing.JLabel();
    channelLeftSlope = new javax.swing.JTextField();
    jLabel9 = new javax.swing.JLabel();
    channelRightSlope = new javax.swing.JTextField();
    jLabel10 = new javax.swing.JLabel();
    channelWaterDepth = new javax.swing.JTextField();
    jSeparator3 = new javax.swing.JSeparator();
    jPanel6 = new javax.swing.JPanel();
    jScrollPane2 = new javax.swing.JScrollPane();
    channelResults = new javax.swing.JTextArea();
    jPanel2 = new javax.swing.JPanel();
    jPanel8 = new javax.swing.JPanel();
    jLabel1 = new javax.swing.JLabel();
    orificeDiameter = new javax.swing.JTextField();
    jLabel2 = new javax.swing.JLabel();
    orificeHead = new javax.swing.JTextField();
    jLabel3 = new javax.swing.JLabel();
    orificeDischargeCoeff = new javax.swing.JTextField();
    orificeCalcButton = new javax.swing.JButton();
    orificeResetButton = new javax.swing.JButton();
    jPanel9 = new javax.swing.JPanel();
    jScrollPane1 = new javax.swing.JScrollPane();
    orificeResults = new javax.swing.JTextArea();
    jPanel3 = new javax.swing.JPanel();
    jPanel10 = new javax.swing.JPanel();
    weirRectSuppButton = new javax.swing.JRadioButton();
    weirRectContButton = new javax.swing.JRadioButton();
    weirVNotchButton = new javax.swing.JRadioButton();
    weirCippolettiButton = new javax.swing.JRadioButton();
    weirBroadCrestedButton = new javax.swing.JRadioButton();
    jSeparator2 = new javax.swing.JSeparator();
    jPanel11 = new javax.swing.JPanel();
    jPanel4 = new javax.swing.JPanel();
    jPanel5 = new javax.swing.JPanel();
    exitButton = new javax.swing.JButton();

    setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
    setTitle("Hydraulix - Calculator Toolbox");
    setResizable(false);

    jTabbedPane1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

    channelCalcButton.setText("Calc");
    channelCalcButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        channelCalcButtonActionPerformed(evt);
      }
    });

    channelResetButton.setText("Reset");
    channelResetButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        channelResetButtonActionPerformed(evt);
      }
    });

    buttonGroup1.add(channelRectButton);
    channelRectButton.setSelected(true);
    channelRectButton.setText("Rectangular Section");
    channelRectButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        channelRectButtonActionPerformed(evt);
      }
    });

    buttonGroup1.add(channelCircButton);
    channelCircButton.setText("Circular Section");
    channelCircButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        channelCircButtonActionPerformed(evt);
      }
    });

    buttonGroup1.add(channelTrapButton);
    channelTrapButton.setText("Trapezoidal Section");
    channelTrapButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        channelTrapButtonActionPerformed(evt);
      }
    });

    jLabel4.setText("Channel Slope (m/m):");

    channelSlope.setToolTipText("Enter slope of channel in m/m");

    jLabel5.setText("Manning's Roughness:");

    channelRoughness.setToolTipText("Enter Manning's roughness coefficient");

    jLabel6.setText("Bottom Width (m):");

    channelBottomWidth.setToolTipText("Enter bottom width of channel in metres");

    jLabel7.setText("Channel Diameter (m):");

    channelDiameter.setToolTipText("Enter diameter of channel in metres");

    jLabel8.setText("Side Slope - L (1:V): ");

    channelLeftSlope.setToolTipText("Enter left side slope of channel (1 horizontal to V vertical)");

    jLabel9.setText("Side Slope - R (1:V):");

    channelRightSlope.setToolTipText("Enter right side slope of channel (1 horizontal to V vertical)");

    jLabel10.setText("Water Depth (m):");

    channelWaterDepth.setToolTipText("Enter water depth in metres");

    javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
    jPanel7.setLayout(jPanel7Layout);
    jPanel7Layout.setHorizontalGroup(
      jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel7Layout.createSequentialGroup()
        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(jPanel7Layout.createSequentialGroup()
            .addGap(6, 6, 6)
            .addComponent(channelCalcButton)
            .addGap(18, 18, Short.MAX_VALUE)
            .addComponent(channelResetButton))
          .addGroup(jPanel7Layout.createSequentialGroup()
            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                  .addComponent(jLabel4)
                  .addComponent(jLabel5)
                  .addComponent(jLabel6)
                  .addComponent(jLabel7)
                  .addComponent(jLabel8)
                  .addComponent(jLabel9)
                  .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                  .addComponent(channelSlope, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                  .addComponent(channelRoughness, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                  .addComponent(channelBottomWidth, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                  .addComponent(channelDiameter, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                  .addComponent(channelLeftSlope, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                  .addComponent(channelRightSlope, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                  .addComponent(channelWaterDepth, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
              .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(channelTrapButton))
              .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(channelCircButton))
              .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(channelRectButton)))
            .addGap(0, 0, Short.MAX_VALUE))
          .addGroup(jPanel7Layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jSeparator1))
          .addGroup(jPanel7Layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jSeparator3)))
        .addContainerGap())
    );
    jPanel7Layout.setVerticalGroup(
      jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
        .addContainerGap()
        .addComponent(channelRectButton)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
        .addComponent(channelCircButton)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
        .addComponent(channelTrapButton)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
          .addComponent(channelSlope, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(jLabel4))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
          .addComponent(channelRoughness, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(jLabel5))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
          .addComponent(channelBottomWidth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(jLabel6))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
          .addComponent(channelDiameter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(jLabel7))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
          .addComponent(channelLeftSlope, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(jLabel8))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
          .addComponent(channelRightSlope, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(jLabel9))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
          .addComponent(channelWaterDepth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(jLabel10))
        .addGap(3, 3, 3)
        .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(channelCalcButton)
          .addComponent(channelResetButton))
        .addContainerGap())
    );

    channelResults.setEditable(false);
    channelResults.setColumns(20);
    channelResults.setFont(new java.awt.Font("Courier New", 0, 14)); // NOI18N
    channelResults.setForeground(new java.awt.Color(0, 0, 0));
    channelResults.setLineWrap(true);
    channelResults.setRows(5);
    jScrollPane2.setViewportView(channelResults);

    javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
    jPanel6.setLayout(jPanel6Layout);
    jPanel6Layout.setHorizontalGroup(
      jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel6Layout.createSequentialGroup()
        .addContainerGap()
        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 455, Short.MAX_VALUE)
        .addContainerGap())
    );
    jPanel6Layout.setVerticalGroup(
      jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel6Layout.createSequentialGroup()
        .addContainerGap()
        .addComponent(jScrollPane2))
    );

    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
    jPanel1.setLayout(jPanel1Layout);
    jPanel1Layout.setHorizontalGroup(
      jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel1Layout.createSequentialGroup()
        .addContainerGap()
        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        .addContainerGap())
    );
    jPanel1Layout.setVerticalGroup(
      jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
          .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
          .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        .addContainerGap())
    );

    jTabbedPane1.addTab("Open Channel", jPanel1);

    jLabel1.setText("Diameter (m):");

    orificeDiameter.setToolTipText("Enter orifice diameter in metres");

    jLabel2.setText("Head (m):");

    orificeHead.setToolTipText("Enter water head in metres");

    jLabel3.setText("Coefficient:");

    orificeDischargeCoeff.setText("0.6");
    orificeDischargeCoeff.setToolTipText("Enter discharge coefficient (Default is 0.6)");

    orificeCalcButton.setText("Calc");
    orificeCalcButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        orificeCalcButtonActionPerformed(evt);
      }
    });

    orificeResetButton.setText("Reset");
    orificeResetButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        orificeResetButtonActionPerformed(evt);
      }
    });

    javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
    jPanel8.setLayout(jPanel8Layout);
    jPanel8Layout.setHorizontalGroup(
      jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel8Layout.createSequentialGroup()
        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
          .addGroup(jPanel8Layout.createSequentialGroup()
            .addGap(6, 6, 6)
            .addComponent(orificeCalcButton)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(orificeResetButton))
          .addGroup(jPanel8Layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addComponent(jLabel2)
              .addComponent(jLabel1)
              .addComponent(jLabel3))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addComponent(orificeDiameter, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
              .addComponent(orificeHead, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
              .addComponent(orificeDischargeCoeff, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))))
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );
    jPanel8Layout.setVerticalGroup(
      jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(orificeDiameter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(jLabel1))
        .addGap(18, 18, 18)
        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(orificeHead, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(jLabel2))
        .addGap(20, 20, 20)
        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jLabel3)
          .addComponent(orificeDischargeCoeff, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 410, Short.MAX_VALUE)
        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(orificeCalcButton)
          .addComponent(orificeResetButton))
        .addContainerGap())
    );

    orificeResults.setEditable(false);
    orificeResults.setColumns(20);
    orificeResults.setFont(new java.awt.Font("Courier New", 0, 14)); // NOI18N
    orificeResults.setForeground(new java.awt.Color(0, 0, 0));
    orificeResults.setLineWrap(true);
    orificeResults.setRows(5);
    orificeResults.setFocusable(false);
    jScrollPane1.setViewportView(orificeResults);

    javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
    jPanel9.setLayout(jPanel9Layout);
    jPanel9Layout.setHorizontalGroup(
      jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGap(0, 494, Short.MAX_VALUE)
      .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel9Layout.createSequentialGroup()
          .addContainerGap()
          .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 482, Short.MAX_VALUE)
          .addContainerGap()))
    );
    jPanel9Layout.setVerticalGroup(
      jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGap(0, 0, Short.MAX_VALUE)
      .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel9Layout.createSequentialGroup()
          .addContainerGap()
          .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 428, Short.MAX_VALUE)
          .addContainerGap()))
    );

    javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
    jPanel2.setLayout(jPanel2Layout);
    jPanel2Layout.setHorizontalGroup(
      jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel2Layout.createSequentialGroup()
        .addContainerGap()
        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, 194, Short.MAX_VALUE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
        .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addContainerGap())
    );
    jPanel2Layout.setVerticalGroup(
      jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
          .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        .addContainerGap())
    );

    jTabbedPane1.addTab("Orifice", jPanel2);

    jPanel10.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

    buttonGroup2.add(weirRectSuppButton);
    weirRectSuppButton.setSelected(true);
    weirRectSuppButton.setText("Rect. Suppressed");

    buttonGroup2.add(weirRectContButton);
    weirRectContButton.setText("Rect. Contracted");

    buttonGroup2.add(weirVNotchButton);
    weirVNotchButton.setText("V-Notch");

    buttonGroup2.add(weirCippolettiButton);
    weirCippolettiButton.setText("Cipoletti");

    buttonGroup2.add(weirBroadCrestedButton);
    weirBroadCrestedButton.setText("Broad Crested");

    javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
    jPanel10.setLayout(jPanel10Layout);
    jPanel10Layout.setHorizontalGroup(
      jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel10Layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(jPanel10Layout.createSequentialGroup()
            .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addComponent(weirRectSuppButton)
              .addComponent(weirRectContButton)
              .addComponent(weirVNotchButton)
              .addComponent(weirCippolettiButton)
              .addComponent(weirBroadCrestedButton))
            .addGap(0, 94, Short.MAX_VALUE))
          .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING))
        .addContainerGap())
    );
    jPanel10Layout.setVerticalGroup(
      jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel10Layout.createSequentialGroup()
        .addContainerGap()
        .addComponent(weirRectSuppButton)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(weirRectContButton)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(weirVNotchButton)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(weirCippolettiButton)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(weirBroadCrestedButton)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addContainerGap(387, Short.MAX_VALUE))
    );

    jPanel11.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

    javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
    jPanel11.setLayout(jPanel11Layout);
    jPanel11Layout.setHorizontalGroup(
      jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGap(0, 442, Short.MAX_VALUE)
    );
    jPanel11Layout.setVerticalGroup(
      jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGap(0, 0, Short.MAX_VALUE)
    );

    javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
    jPanel3.setLayout(jPanel3Layout);
    jPanel3Layout.setHorizontalGroup(
      jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel3Layout.createSequentialGroup()
        .addContainerGap()
        .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        .addContainerGap())
    );
    jPanel3Layout.setVerticalGroup(
      jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
          .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
          .addComponent(jPanel10, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addContainerGap())
    );

    jTabbedPane1.addTab("Weir", jPanel3);

    javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
    jPanel4.setLayout(jPanel4Layout);
    jPanel4Layout.setHorizontalGroup(
      jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGap(0, 712, Short.MAX_VALUE)
    );
    jPanel4Layout.setVerticalGroup(
      jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGap(0, 588, Short.MAX_VALUE)
    );

    jTabbedPane1.addTab("Pipe Head Losses", jPanel4);

    javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
    jPanel5.setLayout(jPanel5Layout);
    jPanel5Layout.setHorizontalGroup(
      jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGap(0, 712, Short.MAX_VALUE)
    );
    jPanel5Layout.setVerticalGroup(
      jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGap(0, 588, Short.MAX_VALUE)
    );

    jTabbedPane1.addTab("Pipe Minor Losses", jPanel5);

    exitButton.setText("Exit");
    exitButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        exitButtonActionPerformed(evt);
      }
    });

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(jTabbedPane1)
          .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
            .addGap(0, 0, Short.MAX_VALUE)
            .addComponent(exitButton)))
        .addContainerGap())
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addGap(3, 3, 3)
        .addComponent(exitButton)
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    pack();
  }// </editor-fold>//GEN-END:initComponents

  private void exitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitButtonActionPerformed
    System.exit(0);
  }//GEN-LAST:event_exitButtonActionPerformed

  private void orificeCalcButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orificeCalcButtonActionPerformed
    // orifice calculator
    // read inputs
    String newOrificeDiam = orificeDiameter.getText();
    String newOrificeHead = orificeHead.getText();
    String newOrificeCD = orificeDischargeCoeff.getText();
    String results = orificeResults.getText();
        
    // compute hydraulic paramters if all inputs are valid
    if (checkInput(newOrificeDiam) && (checkInput(newOrificeHead)) && (checkInput(newOrificeCD))){
      Orifice newOrifice = new Orifice(Double.parseDouble(newOrificeDiam), Double.parseDouble(newOrificeCD), Double.parseDouble(newOrificeHead));
      newOrifice.setDischarge();
    
      results = results + "Results - Orifice\n";
      results = results + "-------------------------\n";
      results = results + String.format("Area: %.2f m^2\n", newOrifice.getFlowArea());
      results = results + String.format("Velocity: %.2f m/s\n", newOrifice.getVelocity());
      results = results + String.format("Flow rate: %.2f m^3/s\n\n", newOrifice.getDischarge());
      orificeResults.setText(results);
    }
    else{
      results = results + "Invalid input parameters\n";
      results = results + "-------------------------\n\n";
      orificeResults.setText(results);
    }
  }//GEN-LAST:event_orificeCalcButtonActionPerformed

  private void orificeResetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orificeResetButtonActionPerformed
    // orifice calculator
    // Reset all input fields to blank or default values
    orificeDiameter.setText("");
    orificeHead.setText("");
    orificeDischargeCoeff.setText("0.6");
  }//GEN-LAST:event_orificeResetButtonActionPerformed

  private void channelCircButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_channelCircButtonActionPerformed
    // open channel calculator
    // disable fields not applicable to circular sections
    jLabel6.setEnabled(false);
    jLabel8.setEnabled(false);
    jLabel9.setEnabled(false);
    channelBottomWidth.setText("");
    channelBottomWidth.setEnabled(false);
    channelLeftSlope.setText("");
    channelLeftSlope.setEnabled(false);
    channelRightSlope.setText("");
    channelRightSlope.setEnabled(false);
    
    // enable fields applicable to circular sections
    jLabel7.setEnabled(true);
    channelDiameter.setEnabled(true);
  }//GEN-LAST:event_channelCircButtonActionPerformed

  private void channelTrapButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_channelTrapButtonActionPerformed
    // open channel calculator
    // disable fields not applicable to trapezoidal sections
    jLabel7.setEnabled(false);
    channelDiameter.setText("");
    channelDiameter.setEnabled(false);
    
    // enable fields applicable to trapezoidal sections
    jLabel6.setEnabled(true);
    jLabel8.setEnabled(true);
    jLabel9.setEnabled(true);
    channelBottomWidth.setEnabled(true);
    channelLeftSlope.setEnabled(true);
    channelRightSlope.setEnabled(true);
  }//GEN-LAST:event_channelTrapButtonActionPerformed

  private void channelRectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_channelRectButtonActionPerformed
    // open channel calculator
    // disable fields not applicable to rectangular sections
    jLabel7.setEnabled(false);
    jLabel8.setEnabled(false);
    jLabel9.setEnabled(false);
    channelDiameter.setText("");
    channelDiameter.setEnabled(false);
    channelLeftSlope.setText("");
    channelLeftSlope.setEnabled(false);
    channelRightSlope.setText("");
    channelRightSlope.setEnabled(false);
    
    // enable fields applicable to rectangular sections
    jLabel6.setEnabled(true);
    channelBottomWidth.setEnabled(true);
  }//GEN-LAST:event_channelRectButtonActionPerformed

  private void channelCalcButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_channelCalcButtonActionPerformed
    // open channel calculator
    // read common inputs
    String results = channelResults.getText();
    String newChannelSlope = channelSlope.getText();
    String newChannelRoughness = channelRoughness.getText();
    String newChannelWaterDepth = channelWaterDepth.getText();
    
    if (channelRectButton.isSelected()){
      // read input relevant to rectangular section
      String newChannelWidth = channelBottomWidth.getText();
      
      // compute hydraulic paramters if all inputs are valid
      if (checkInput(newChannelSlope) && (checkInput(newChannelRoughness)) && (checkInput(newChannelWaterDepth)) && (checkInput(newChannelWidth))){
        RecSection newChannel = new RecSection(Double.parseDouble(newChannelSlope), Double.parseDouble(newChannelRoughness), Double.parseDouble(newChannelWidth), Double.parseDouble(newChannelWaterDepth));
        newChannel.calcSection();
        
        results = results + "Results - Rectangular Channel\n";
        results = results + "------------------------------\n";
        results = results + String.format("Wetted Perimeter: %.3f m\n", newChannel.getWettedPerimeter());
        results = results + String.format("Wetted Area: %.3f m^2\n", newChannel.getWettedArea());
        results = results + String.format("Hydraulic Radius: %.3f m\n", newChannel.getHydraulicR());
        results = results + String.format("Velocity: %.3f m/s\n", newChannel.getVelocity());
        results = results + String.format("Flow rate: %.3f m^3/s\n\n", newChannel.getFlowRate());
        channelResults.setText(results);
      }
      else {
        results = results + "Invalid input parameters\n";
        results = results + "-------------------------\n\n";
        channelResults.setText(results);
      }
    }
    else if (channelCircButton.isSelected()){
      // read input relevant to circular section
      String newChannelDiameter = channelDiameter.getText();
      
      // compute hydraulic paramters if all inputs are valid
      if (checkInput(newChannelSlope) && (checkInput(newChannelRoughness)) && (checkInput(newChannelWaterDepth)) && (checkInput(newChannelDiameter))){
        CircSection newChannel = new CircSection(Double.parseDouble(newChannelSlope), Double.parseDouble(newChannelRoughness), (Double.parseDouble(newChannelDiameter)/2), Double.parseDouble(newChannelWaterDepth));
        newChannel.calcSection();
        
        results = results + "Results - Circular Channel\n";
        results = results + "------------------------------\n";
        results = results + String.format("Wetted Perimeter: %.3f m\n", newChannel.getWettedPerimeter());
        results = results + String.format("Wetted Area: %.3f m^2\n", newChannel.getWettedArea());
        results = results + String.format("Hydraulic Radius: %.3f m\n", newChannel.getHydraulicR());
        results = results + String.format("Velocity: %.3f m/s\n", newChannel.getVelocity());
        results = results + String.format("Flow rate: %.3f m^3/s\n\n", newChannel.getFlowRate());
        channelResults.setText(results);
      }
      else {
        results = results + "Invalid input parameters\n";
        results = results + "-------------------------\n\n";
        channelResults.setText(results);
      }
    }
    else {
      // read input relevant to trapezoidal section
      String newChannelWidth = channelBottomWidth.getText();
      String newChannelLSlope = channelLeftSlope.getText();
      String newChannelRSlope = channelRightSlope.getText();
      
      // compute hydraulic paramters if all inputs are valid
      if (checkInput(newChannelSlope) && (checkInput(newChannelRoughness)) && (checkInput(newChannelWaterDepth)) && (checkInput(newChannelWidth)) && (checkInput(newChannelLSlope)) && (checkInput(newChannelRSlope))){
        TrapSection newChannel = new TrapSection(Double.parseDouble(newChannelSlope), Double.parseDouble(newChannelRoughness), Double.parseDouble(newChannelWidth), Double.parseDouble(newChannelLSlope), Double.parseDouble(newChannelRSlope), Double.parseDouble(newChannelWaterDepth));
        newChannel.calcSection();
        
        results = results + "Results - Trapezoidal Channel\n";
        results = results + "------------------------------\n";
        results = results + String.format("Wetted Perimeter: %.3f m\n", newChannel.getWettedPerimeter());
        results = results + String.format("Wetted Area: %.3f m^2\n", newChannel.getWettedArea());
        results = results + String.format("Hydraulic Radius: %.3f m\n", newChannel.getHydraulicR());
        results = results + String.format("Velocity: %.3f m/s\n", newChannel.getVelocity());
        results = results + String.format("Flow rate: %.3f m^3/s\n\n", newChannel.getFlowRate());
        channelResults.setText(results);
      }
      else {
        results = results + "Invalid input parameters\n";
        results = results + "-------------------------\n\n";
        channelResults.setText(results);
      }
    }
  }//GEN-LAST:event_channelCalcButtonActionPerformed

  private void channelResetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_channelResetButtonActionPerformed
    // open channel calculator
    // Reset all input fields to blank or default values
    channelSlope.setText("");
    channelRoughness.setText("");
    channelBottomWidth.setText("");
    channelDiameter.setText("");
    channelLeftSlope.setText("");
    channelRightSlope.setText("");
    channelWaterDepth.setText("");
  }//GEN-LAST:event_channelResetButtonActionPerformed

  // open channel calculator
  // method to intialise default input fields
  // takes no arguments
  // returns void
  private void initChannelFields(){
    // disable fields not applicable to rectangular sections
    jLabel7.setEnabled(false);
    jLabel8.setEnabled(false);
    jLabel9.setEnabled(false);
    channelDiameter.setEnabled(false);
    channelLeftSlope.setEnabled(false);
    channelRightSlope.setEnabled(false);
        
    // enable fields applicable to rectangular sections
    jLabel6.setEnabled(true);
    channelBottomWidth.setEnabled(true);
  }
  
  
  // helper method to check that input is numeric & positive
  // takes a String
  // returns boolean
  private Boolean checkInput(String userInput){
    Boolean validInput = true;
    try{
      // throws an exception if userInput is non-numeric
      double currInput = Double.parseDouble(userInput);
      
      // throws an exception for negative numeric inputs
      if (currInput < 0){
        throw new Exception();
      }
    }
    catch(Exception e){
      validInput = false;
    }
    return validInput;
  }
  
  
  /**
   * @param args the command line arguments
   */
  public static void main(String args[]) {
    /* Set the Nimbus look and feel */
    //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
    /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
     */
    try {
      for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
        if ("Nimbus".equals(info.getName())) {
          javax.swing.UIManager.setLookAndFeel(info.getClassName());
          break;
        }
      }
    } catch (ClassNotFoundException ex) {
      java.util.logging.Logger.getLogger(HydraulixGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (InstantiationException ex) {
      java.util.logging.Logger.getLogger(HydraulixGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (IllegalAccessException ex) {
      java.util.logging.Logger.getLogger(HydraulixGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (javax.swing.UnsupportedLookAndFeelException ex) {
      java.util.logging.Logger.getLogger(HydraulixGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
    //</editor-fold>

    /* Create and display the form */
    java.awt.EventQueue.invokeLater(new Runnable() {
      public void run() {
        new HydraulixGUI().setVisible(true);
      }
    });
  }

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.ButtonGroup buttonGroup1;
  private javax.swing.ButtonGroup buttonGroup2;
  private javax.swing.JTextField channelBottomWidth;
  private javax.swing.JButton channelCalcButton;
  private javax.swing.JRadioButton channelCircButton;
  private javax.swing.JTextField channelDiameter;
  private javax.swing.JTextField channelLeftSlope;
  private javax.swing.JRadioButton channelRectButton;
  private javax.swing.JButton channelResetButton;
  private javax.swing.JTextArea channelResults;
  private javax.swing.JTextField channelRightSlope;
  private javax.swing.JTextField channelRoughness;
  private javax.swing.JTextField channelSlope;
  private javax.swing.JRadioButton channelTrapButton;
  private javax.swing.JTextField channelWaterDepth;
  private javax.swing.JButton exitButton;
  private javax.swing.JLabel jLabel1;
  private javax.swing.JLabel jLabel10;
  private javax.swing.JLabel jLabel2;
  private javax.swing.JLabel jLabel3;
  private javax.swing.JLabel jLabel4;
  private javax.swing.JLabel jLabel5;
  private javax.swing.JLabel jLabel6;
  private javax.swing.JLabel jLabel7;
  private javax.swing.JLabel jLabel8;
  private javax.swing.JLabel jLabel9;
  private javax.swing.JPanel jPanel1;
  private javax.swing.JPanel jPanel10;
  private javax.swing.JPanel jPanel11;
  private javax.swing.JPanel jPanel2;
  private javax.swing.JPanel jPanel3;
  private javax.swing.JPanel jPanel4;
  private javax.swing.JPanel jPanel5;
  private javax.swing.JPanel jPanel6;
  private javax.swing.JPanel jPanel7;
  private javax.swing.JPanel jPanel8;
  private javax.swing.JPanel jPanel9;
  private javax.swing.JScrollPane jScrollPane1;
  private javax.swing.JScrollPane jScrollPane2;
  private javax.swing.JSeparator jSeparator1;
  private javax.swing.JSeparator jSeparator2;
  private javax.swing.JSeparator jSeparator3;
  private javax.swing.JTabbedPane jTabbedPane1;
  private javax.swing.JButton orificeCalcButton;
  private javax.swing.JTextField orificeDiameter;
  private javax.swing.JTextField orificeDischargeCoeff;
  private javax.swing.JTextField orificeHead;
  private javax.swing.JButton orificeResetButton;
  private javax.swing.JTextArea orificeResults;
  private javax.swing.JRadioButton weirBroadCrestedButton;
  private javax.swing.JRadioButton weirCippolettiButton;
  private javax.swing.JRadioButton weirRectContButton;
  private javax.swing.JRadioButton weirRectSuppButton;
  private javax.swing.JRadioButton weirVNotchButton;
  // End of variables declaration//GEN-END:variables
}
